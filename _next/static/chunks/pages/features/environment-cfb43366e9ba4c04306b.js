(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[353],{9961:function(e,t,n){"use strict";var o=n(5893);t.Z={repository:"https://github.com/TobitSoftware/chayns-toolkit",docsRepository:"https://github.com/TobitSoftware/chayns-toolkit",branch:"master",path:"/",titleSuffix:" \u2013 chayns-toolkit",nextLinks:!0,prevLinks:!0,search:!0,customSearch:null,darkMode:!0,footer:!0,footerText:"MIT 2021 \xa9 Tobit Software Laboratories AG",footerEditOnGitHubLink:!0,logo:(0,o.jsx)("img",{src:"/logo.png",style:{height:32},alt:"chayns-toolkit"}),head:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,o.jsx)("meta",{name:"description",content:"A zero-config toolchain for developing chayns\xae apps."}),(0,o.jsx)("meta",{name:"og:title",content:"chayns-toolkit"})]})}},9238:function(e,t,n){"use strict";n.r(t);var o=n(6156),a=n(7375),r=(n(7294),n(2763)),i=n(7829),s=n.n(i),l=n(3805),c=n(9961);function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}var p=function(e){return(0,l.withSSG)(s()({filename:"environment.md",route:"/features/environment",meta:{},pageMap:[{name:"_app",route:"/_app"},{name:"commands",children:[{name:"build",route:"/commands/build"},{name:"dev",route:"/commands/dev"},{name:"lint",route:"/commands/lint"},{name:"meta.json",meta:{dev:"Dev",build:"Build",lint:"Lint",test:"Test"}},{name:"test",route:"/commands/test"}],route:"/commands"},{name:"configuration",children:[{name:"development",route:"/configuration/development"},{name:"meta.json",meta:{development:"Development",output:"Build Output",webpack:"Customizing Webpack"}},{name:"output",route:"/configuration/output"},{name:"webpack",route:"/configuration/webpack"}],route:"/configuration"},{name:"contributing",route:"/contributing"},{name:"features",children:[{name:"assets",route:"/features/assets"},{name:"css",route:"/features/css"},{name:"devtools",route:"/features/devtools"},{name:"environment",route:"/features/environment"},{name:"eslint",route:"/features/eslint"},{name:"meta.json",meta:{typescript:"TypeScript",css:"(S)CSS Support",assets:"Images and Assets",devtools:"React Devtools",eslint:"ESLint Integration",environment:"Environment Variables"}},{name:"typescript",route:"/features/typescript"}],route:"/features"},{name:"getting-started",route:"/getting-started"},{name:"index",route:"/"},{name:"meta.json",meta:{index:"Welcome","getting-started":"Getting Started",features:"Features",commands:"Commands",configuration:"Configuration",contributing:"Contributing"}}]},c.Z))(e)};function m(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,r.kt)(p,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){(0,o.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({components:t},n),(0,r.kt)("h1",null,"Environment Variables"),(0,r.kt)("p",null,"All system environment variables as well as any variables specified in a\n",(0,r.kt)("inlineCode",{parentName:"p"},".env.local")," file in the root of your project directory will be available to\nyour code under ",(0,r.kt)("inlineCode",{parentName:"p"},"process.env.VAR_NAME"),"."),(0,r.kt)("h2",null,"Example"),(0,r.kt)("p",null,"Your ",(0,r.kt)("inlineCode",{parentName:"p"},".env.local")," file would look something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GOOGLE_MAPS_API_KEY=1bc29b36f623ba82aaf6724fd3b16718\nOTHER_IMPORTANT_API_KEY=ca794fb2d950acf25c964ecc35f2d7e2\n... other values ...\n")),(0,r.kt)("p",null,"These values can be accessed in your code on the ",(0,r.kt)("inlineCode",{parentName:"p"},"process.env")," namespace:"),(0,r.kt)("pre",null,(0,r.kt)("code",{className:"language-ts",parentName:"pre"},"const API_KEY = process.env.GOOGLE_MAPS_API_KEY\n")),(0,r.kt)("h2",null,"How to Use It Correctly"),(0,r.kt)("p",null,"Keep your ",(0,r.kt)("inlineCode",{parentName:"p"},".env.local")," in your ",(0,r.kt)("inlineCode",{parentName:"p"},".gitignore")," file and not push it to source\ncontrol."),(0,r.kt)("p",null,"Set environment variables in your CI/CD solution (e.g. Vercel, TeamCity)\ndirectly. Here's a guide on how to do that for\n",(0,r.kt)("a",{href:"https://www.jetbrains.com/help/teamcity/configuring-build-parameters.html",parentName:"p"},"TeamCity"),"."),(0,r.kt)("p",null,"If you want your app to behave differently for each build environment, e.g. use\na QA backend when doing QA tests, use an environment variable for it\n(",(0,r.kt)("inlineCode",{parentName:"p"},"BUILD_ENV")," for example). Set a different value for this environment variable\nfor every build environment (",(0,r.kt)("inlineCode",{parentName:"p"},"BUILD_ENV=qa"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"BUILD_ENV=production"),", etc.)."),(0,r.kt)("h2",null,"Caveats"),(0,r.kt)("p",null,"During compilation, ",(0,r.kt)("inlineCode",{parentName:"p"},"chayns-toolkit")," will look at your source code and look for\nplaces where you access ",(0,r.kt)("inlineCode",{parentName:"p"},"process.env"),". It will then match these places with the\navailable environment variables and do a string replacement if it can find one."),(0,r.kt)("p",null,"In other words this means that you cannot access the variables with any other\nsyntax. Only ",(0,r.kt)("inlineCode",{parentName:"p"},"process.env.VAR_NAME")," will be replaced, but other syntax like\n",(0,r.kt)("inlineCode",{parentName:"p"},"const { VAR_NAME } = process.env")," will not be detected."))}m.isMDXComponent=!0,t.default=m},707:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/features/environment",function(){return n(9238)}])}},0,[[707,272,774,351,503]]]);